{{ reserveImport "context" }}
{{ reserveImport "log" }}
{{ reserveImport "net/http" }}
{{ reserveImport "os" }}
{{ reserveImport "github.com/99designs/gqlgen/handler" }}
{{ reserveImport "github.com/gorilla/mux" }}
// including auth to have its init() method run by default so it can register as a middleware
// to have the default logged out viewer set if no auth handlers registered
{{ reserveImport "github.com/lolopinto/ent/ent/auth" "_" }}
{{ reserveImport "github.com/lolopinto/ent/ent/request" }}
{{ reserveImport "github.com/lolopinto/ent/ent/viewer" }}

const defaultPort = "8080"

func main() {
	port := os.Getenv("PORT")
	if port == "" {
		port = defaultPort
	}

  r := mux.NewRouter()
  for _, v := range request.GetAllMiddlewares() {
		r.Use(v)
	}
  {{/* sad. an iterator will be better */ -}}
  {{/*	request.ApplyAllMiddlewares(r.Use) */ -}}

	r.Handle("/", handler.Playground("GraphQL playground", "/query"))
	r.Handle("/query", handler.GraphQL({{ lookupImport .ExecPackageName }}.NewExecutableSchema({{ lookupImport .ExecPackageName}}.Config{Resolvers: &{{ lookupImport .ResolverPackageName}}.Resolver{}})))

	log.Printf("connect to http://localhost:%s/ for GraphQL playground", port)
	log.Fatal(http.ListenAndServe(":" + port, r))
}
