# Code generated by github.com/lolopinto/ent/ent, DO NOT edit. 

"""add assoc_edge_config table
add events table
add user_events_edges table
add users table

Revision ID: 4cd3968904bd
Revises: 
Create Date: 2019-08-30 03:24:20.225848+00:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4cd3968904bd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assoc_edge_config',
    sa.Column('edge_type', postgresql.UUID(), nullable=False),
    sa.Column('edge_name', sa.Text(), nullable=False),
    sa.Column('symmetric_edge', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('inverse_edge_type', postgresql.UUID(), nullable=True),
    sa.Column('edge_table', sa.Text(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['inverse_edge_type'], ['assoc_edge_config.edge_type'], name='assoc_edge_config_inverse_edge_type_fkey', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('edge_type', name='assoc_edge_config_edge_type_pkey'),
    sa.UniqueConstraint('edge_name', name='assoc_edge_config_unique_edge_name')
    )
    op.create_table('events',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('user_id', sa.Text(), nullable=False),
    sa.Column('start_time', sa.TIMESTAMP(), nullable=False),
    sa.Column('end_time', sa.TIMESTAMP(), nullable=False),
    sa.Column('location', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id', name='events_id_pkey')
    )
    op.create_table('user_events_edges',
    sa.Column('id1', postgresql.UUID(), nullable=False),
    sa.Column('id1_type', sa.Text(), nullable=False),
    sa.Column('edge_type', postgresql.UUID(), nullable=False),
    sa.Column('id2', postgresql.UUID(), nullable=False),
    sa.Column('id2_type', sa.Text(), nullable=False),
    sa.Column('time', sa.TIMESTAMP(), nullable=False),
    sa.Column('data', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id1', 'edge_type', 'id2', name='user_events_edges_id1_edge_type_id2_pkey')
    )
    op.create_table('users',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('email_address', sa.Text(), nullable=False),
    sa.Column('first_name', sa.Text(), nullable=False),
    sa.Column('last_name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_id_pkey'),
    sa.UniqueConstraint('email_address', name='users_unique_email_address')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('user_events_edges')
    op.drop_table('events')
    op.drop_table('assoc_edge_config')
    # ### end Alembic commands ###
