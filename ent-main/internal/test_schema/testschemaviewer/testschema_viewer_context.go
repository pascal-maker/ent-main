// Code generated by github.com/lolopinto/ent/ent.

package testschemaviewer

import (
	"github.com/lolopinto/ent/ent/viewer"
	"github.com/lolopinto/ent/internal/test_schema/models"
)

// TestschemaViewerContext represents who's logged in (if any) at any given time
type TestschemaViewerContext struct {
	viewerID string
	user     *models.User
}

// GetViewerID returns the ID of the logged in viewer
func (v *TestschemaViewerContext) GetViewerID() string {
	return v.viewerID
}

// GetViewer returns the logged in entity
func (v *TestschemaViewerContext) GetViewer() viewer.LoggedInEntity {
	return v.user
}

// GetUser returns the User associated with TestschemaViewerContext
func (v *TestschemaViewerContext) GetUser() *models.User {
	return v.user
}

// NewViewerContext takes a viewer id and returns a viewer context mapping to said user
func NewViewerContext(viewerID string) (viewer.ViewerContext, error) {
	// init viewer
	v := &TestschemaViewerContext{viewerID: viewerID}
	// pass viewer to load function presumably the privacy model of this object allows viewer to
	// see themselves...
	user, err := models.LoadUser(v, viewerID)
	if err != nil {
		return nil, err
	}
	v.user = user
	return v, nil
}
